{"id":"script.js","dependencies":[{"name":"/media/andreas/3C904B17904AD6D4/myproject/extra small project/sandbox_parcel/.babelrc","includedInParent":true,"mtime":1578684575713},{"name":"/media/andreas/3C904B17904AD6D4/myproject/extra small project/sandbox_parcel/package.json","includedInParent":true,"mtime":1578685566682},{"name":"./style.scss","parent":"/media/andreas/3C904B17904AD6D4/myproject/extra small project/sandbox_parcel/src/script.js","resolved":"/media/andreas/3C904B17904AD6D4/myproject/extra small project/sandbox_parcel/src/style.scss"}],"generated":{"js":"\"use strict\";\n\nvar getUserAsync = function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var response, data;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.github.com/users\");\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", console.log(data));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function getUserAsync() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nrequire(\"./style.scss\");\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\ngetUserAsync();\n/*class Animal { \n    constructor(name) {\n      this.name = name;\n    }\n    \n    speak() {\n      console.log(`${this.name} makes a noise.`);\n    }\n  }\n  \n  class Dog extends Animal {\n    constructor(name) {\n      super(name); // call the super class constructor and pass in the name parameter\n    }\n  \n    speak() {\n      console.log(`${this.name} barks.`);\n    }\n  }\n  \n  let d = new Dog('Mitzie');\n let  dog = new Dog('test');\n  d.speak();\n  dog.speak(); */"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":6,"column":26},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":7,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":8,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"name":"fetch","generated":{"line":13,"column":19},"source":"script.js","original":{"line":5,"column":23}},{"generated":{"line":13,"column":24},"source":"script.js","original":{"line":5,"column":28}},{"generated":{"line":13,"column":56},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"name":"response","generated":{"line":16,"column":0},"source":"script.js","original":{"line":5,"column":6}},{"name":"response","generated":{"line":16,"column":12},"source":"script.js","original":{"line":5,"column":6}},{"generated":{"line":16,"column":20},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":17,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":18,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"name":"response","generated":{"line":18,"column":19},"source":"script.js","original":{"line":6,"column":19}},{"generated":{"line":18,"column":27},"source":"script.js","original":{"line":6,"column":27}},{"name":"json","generated":{"line":18,"column":28},"source":"script.js","original":{"line":6,"column":28}},{"generated":{"line":18,"column":32},"source":"script.js","original":{"line":6,"column":19}},{"generated":{"line":18,"column":34},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":20,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"name":"data","generated":{"line":21,"column":0},"source":"script.js","original":{"line":6,"column":6}},{"name":"data","generated":{"line":21,"column":12},"source":"script.js","original":{"line":6,"column":6}},{"generated":{"line":21,"column":16},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"name":"console","generated":{"line":22,"column":45},"source":"script.js","original":{"line":7,"column":9}},{"generated":{"line":22,"column":52},"source":"script.js","original":{"line":7,"column":16}},{"name":"log","generated":{"line":22,"column":53},"source":"script.js","original":{"line":7,"column":17}},{"generated":{"line":22,"column":56},"source":"script.js","original":{"line":7,"column":9}},{"name":"data","generated":{"line":22,"column":57},"source":"script.js","original":{"line":7,"column":21}},{"generated":{"line":22,"column":61},"source":"script.js","original":{"line":7,"column":9}},{"generated":{"line":22,"column":62},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":24,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":25,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":26,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":27,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":28,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":29,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":30,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"name":"getUserAsync","generated":{"line":32,"column":18},"source":"script.js","original":{"line":3,"column":15}},{"generated":{"line":37,"column":0},"source":"script.js","original":{"line":1,"column":0}},{"name":"getUserAsync","generated":{"line":41,"column":0},"source":"script.js","original":{"line":9,"column":0}},{"generated":{"line":41,"column":12},"source":"script.js","original":{"line":9,"column":12}},{"generated":{"line":42,"column":0},"source":"script.js","original":{"line":11,"column":0}}],"sources":{"script.js":"import './style.scss';\n\nasync function getUserAsync() \n{\n  let response = await fetch(`https://api.github.com/users`);\n  let data = await response.json()\n  return console.log(data);\n}\ngetUserAsync();\n\n/*class Animal { \n    constructor(name) {\n      this.name = name;\n    }\n    \n    speak() {\n      console.log(`${this.name} makes a noise.`);\n    }\n  }\n  \n  class Dog extends Animal {\n    constructor(name) {\n      super(name); // call the super class constructor and pass in the name parameter\n    }\n  \n    speak() {\n      console.log(`${this.name} barks.`);\n    }\n  }\n  \n  let d = new Dog('Mitzie');\n let  dog = new Dog('test');\n  d.speak();\n  dog.speak(); */"},"lineCount":null}},"error":null,"hash":"f160b1913ddd98b746ab0b6a77574c0a","cacheData":{"env":{}}}